{"version":3,"sources":["webpack:///webpack/bootstrap 5df21e2126f493199cea","webpack:///./studio/main_dev.js","webpack:///./studio/AssetEditor.js","webpack:///external \"Studio.libraries['react']\"","webpack:///./studio/AssetUploadButton.js","webpack:///external \"Studio\"","webpack:///./studio/NewAssetModal.js","webpack:///./studio/AssetProperties.js"],"names":["addEntitySet","name","faIcon","visibleName","onNew","openModal","addEditorComponent","addToolbarComponent","addPropertiesComponent","title","entity","__entitySet","FileEditor","state","isMetaView","props","content","link","api","get","parseJSON","setState","onUpdate","downloadUrl","resolveUrl","mode","includes","textTransform","OpenUpload","openEditor","_id","atob","v","Object","assign","btoa","_fileUploadButton","AssetUploadButton","e","target","files","length","file","reader","FileReader","onloadend","refs","value","type","workspaces","save","post","data","result","substring","indexOf","response","addExistingEntity","openTab","updateEntity","tab","patch","loadEntity","onerror","alert","readAsDataURL","dispatchEvent","MouseEvent","window","display","upload","renderUpload","openFileDialog","NewAssetModal","isLink","error","close","message","color","OpenUploadNew","createAsset","propTypes","func","isRequired","AssetProperties","onChange","entities"],"mappings":"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","file":"./studio/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5df21e2126f493199cea\n **/","import AssetEditor from './AssetEditor.js'\r\nimport AssetUploadButton from './AssetUploadButton.js'\r\nimport NewAssetModal from './NewAssetModal.js'\r\nimport AssetProperties from './AssetProperties.js'\r\nimport Studio from 'jsreport-studio'\r\n\r\nStudio.addEntitySet({\r\n  name: 'assets',\r\n  faIcon: 'fa-file',\r\n  visibleName: 'asset',\r\n  onNew: () => Studio.openModal(NewAssetModal)\r\n})\r\n\r\nStudio.addEditorComponent('assets', AssetEditor)\r\nStudio.addToolbarComponent(AssetUploadButton)\r\nStudio.addPropertiesComponent(AssetProperties.title, AssetProperties, (entity) => entity.__entitySet === 'assets')\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/main_dev.js\n **/","import React, { Component } from 'react'\r\nimport AssetUploadButton from './AssetUploadButton.js'\r\nimport Studio, { TextEditor } from 'jsreport-studio'\r\n\r\nexport default class FileEditor extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = { isMetaView: true }\r\n  }\r\n\r\n  async openEditor () {\r\n    const { entity } = this.props\r\n\r\n    var content = entity.content\r\n    if (entity.link && !entity.content) {\r\n      content = await Studio.api.get(`api/asset/${entity.name}`, { parseJSON: false })\r\n    }\r\n\r\n    this.setState({ isMetaView: false, content: content })\r\n  }\r\n\r\n  render () {\r\n    const { entity, onUpdate } = this.props\r\n    const { isMetaView, content } = this.state\r\n    const downloadUrl = Studio.resolveUrl(`api/asset/${entity.name}`)\r\n    let mode = 'text'\r\n    if (entity.name.includes('.js')) {\r\n      mode = 'javascript'\r\n    }\r\n\r\n    if (entity.name.includes('.css')) {\r\n      mode = 'css'\r\n    }\r\n\r\n    if (entity.name.includes('.html')) {\r\n      mode = 'html'\r\n    }\r\n\r\n    return (isMetaView ? <div className='custom-editor'>\r\n      <div><h1><i className='fa fa-file' /> {entity.name}</h1></div>\r\n      <div><i>assets extension is currently in beta</i></div>\r\n      <div>\r\n        <div>Embed into a template content, template helpers using or a custom script:\r\n          <code>\r\n            <h2 style={{textTransform: 'none'}}>\r\n              { '{#asset ' + entity.name + '}'}\r\n            </h2>\r\n\r\n            <h2 style={{textTransform: 'none'}}>\r\n              { '{#asset ' + entity.name + ' @encoding=base64}'}\r\n            </h2>\r\n          </code>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <a className='button confirmation' target='_blank' href={downloadUrl}>\r\n          <i className='fa fa-download' /> Download file\r\n        </a>\r\n        {entity.link\r\n          ? <span /> : <button className='button confirmation'\r\n            onClick={() => AssetUploadButton.OpenUpload()}><i className='fa fa-upload' />\r\n          Upload file</button>}\r\n        <button className='button confirmation' onClick={() => this.openEditor()}>\r\n          <i className='fa fa-folder-open' /> Open in editor\r\n        </button>\r\n      </div>\r\n    </div> : <TextEditor\r\n      name={entity._id}\r\n      mode={mode}\r\n      value={entity.content ? atob(entity.content) : content}\r\n      onUpdate={(v) => onUpdate(Object.assign({}, entity, {content: btoa(v)}))}\r\n      />)\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/AssetEditor.js\n **/","module.exports = Studio.libraries['react'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['react']\"\n ** module id = 2\n ** module chunks = 0\n **/","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\n\r\nlet _fileUploadButton\r\n\r\nexport default class AssetUploadButton extends Component {\r\n  // we need to have global action in main_dev which is triggered when users clicks on + on images\r\n  // this triggers invisible button in the toolbar\r\n  static OpenUpload () {\r\n    _fileUploadButton.openFileDialog('edit')\r\n  }\r\n\r\n  static OpenUploadNew () {\r\n    _fileUploadButton.openFileDialog('new')\r\n  }\r\n\r\n  componentDidMount () {\r\n    _fileUploadButton = this\r\n  }\r\n\r\n  upload (e) {\r\n    if (!e.target.files.length) {\r\n      return\r\n    }\r\n\r\n    const file = e.target.files[0]\r\n    const reader = new FileReader()\r\n\r\n    reader.onloadend = async () => {\r\n      this.refs.file.value = ''\r\n      if (this.type === 'new') {\r\n        if (Studio.workspaces) {\r\n          await Studio.workspaces.save()\r\n        }\r\n\r\n        let response = await Studio.api.post('/odata/assets', {\r\n          data: {\r\n            content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\r\n            name: file.name\r\n          }\r\n        })\r\n        response.__entitySet = 'assets'\r\n\r\n        Studio.addExistingEntity(response)\r\n        Studio.openTab(Object.assign({}, response))\r\n      }\r\n\r\n      if (this.type === 'edit') {\r\n        if (Studio.workspaces) {\r\n          Studio.updateEntity({\r\n            name: this.props.tab.entity.name,\r\n            content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\r\n          })\r\n\r\n          await Studio.workspaces.save()\r\n        } else {\r\n          await Studio.api.patch(`/odata/assets(${this.props.tab.entity._id})`, {\r\n            data: {\r\n              content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\r\n              link: null\r\n            }\r\n          })\r\n          Studio.loadEntity(this.props.tab.entity._id, true)\r\n        }\r\n      }\r\n    }\r\n\r\n    reader.onerror = function () {\r\n      alert('There was an error reading the file!')\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  openFileDialog (type) {\r\n    this.type = type\r\n\r\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\r\n      'view': window,\r\n      'bubbles': false,\r\n      'cancelable': true\r\n    }))\r\n  }\r\n\r\n  renderUpload () {\r\n    return <input type='file' key='file' ref='file' style={{display: 'none'}} onChange={(e) => this.upload(e)} />\r\n  }\r\n\r\n  render () {\r\n    return this.renderUpload(true)\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/AssetUploadButton.js\n **/","module.exports = Studio;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio\"\n ** module id = 4\n ** module chunks = 0\n **/","import React, {Component, PropTypes} from 'react'\r\nimport AssetUploadButton from './AssetUploadButton.js'\r\nimport Studio from 'jsreport-studio'\r\n\r\nexport default class NewAssetModal extends Component {\r\n  static propTypes = {\r\n    close: PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor () {\r\n    super()\r\n    this.state = { isLink: false }\r\n  }\r\n\r\n  async createAsset () {\r\n    let entity = {}\r\n\r\n    if (!this.state.isLink && (!this.refs.name.value || this.refs.name.value.indexOf('.')) < 0) {\r\n      return this.setState({ error: 'name should include file extension, for example foo.js' })\r\n    }\r\n\r\n    if (this.state.isLink) {\r\n      entity.link = this.refs.link.value\r\n    } else {\r\n      entity.name = this.refs.name.value\r\n    }\r\n\r\n    try {\r\n      let response = await Studio.api.post('/odata/assets', {\r\n        data: entity\r\n      })\r\n      response.__entitySet = 'assets'\r\n\r\n      Studio.addExistingEntity(response)\r\n      Studio.openTab(response)\r\n      this.props.close()\r\n    } catch (e) {\r\n      this.setState({ error: e.message })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { isLink, error } = this.state\r\n\r\n    return <div>\r\n      <div className='form-group'>\r\n        <label>link to existing file</label>\r\n        <input\r\n          type='checkbox' checked={isLink}\r\n          onChange={() => this.setState({ isLink: !isLink })} />\r\n      </div>\r\n      {isLink ? <div className='form-group'>\r\n        <label>Relative or absolute path to existing file</label>\r\n        <input type='text' name='link' ref='link' />\r\n      </div> : <div className='form-group'>\r\n        <label>Name</label>\r\n        <input type='text' name='name' ref='name' />\r\n      </div>\r\n      }\r\n      <div className='form-group'>\r\n        <span\r\n          style={{color: 'red', display: error ? 'block' : 'none'}}>{error}</span>\r\n      </div>\r\n      <div className='button-bar'>\r\n        <button\r\n          className='button confirmation'\r\n          onClick={() => { this.props.close(); AssetUploadButton.OpenUploadNew() }}>Upload\r\n        </button>\r\n        <button className={'button confirmation'} onClick={() => this.createAsset()}>Ok</button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/NewAssetModal.js\n **/","import React, { Component } from 'react'\r\n\r\nexport default class AssetProperties extends Component {\r\n\r\n  static title (entity, entities) {\r\n    return `asset ${entity.link ? '(link)' : ''}`\r\n  }\r\n\r\n  render () {\r\n    const { entity, onChange } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <div className='form-group'>\r\n          <label>link</label>\r\n          <input type='text' value={entity.link || ''} onChange={(v) => onChange({_id: entity._id, link: v.target.value})} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/AssetProperties.js\n **/"],"sourceRoot":""}